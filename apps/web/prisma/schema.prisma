// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int           @id @default(autoincrement()) // primary key
  image_url            String? //nullable
  first_name           String
  last_name            String
  referral_code        String
  password             String
  created_at           DateTime      @default(now())
  update_at            DateTime      @updatedAt
  role                 String
  point_balance        Int
  point_expired_date   DateTime
  email                String
  friend_referral_code String? //nullable
  Transaction          Transaction[]
  Event                Event[]
  Promotion            Promotion[]
  Review               Review[]

  @@map("users")
}

model Transaction {
  id                 Int      @id @default(autoincrement())
  booked_time        DateTime
  payment_status     String
  customer           User     @relation(fields: [customer_id], references: [id])
  customer_id        Int
  payment_proof_link String?
  amount             Float
  event              Event    @relation(fields: [event_id], references: [id])
  event_id           Int
  Review             Review[]

  @@map("trx")
}

model Event {
  id           Int           @id @default(autoincrement())
  speaker      String
  event_name   String
  location     String
  slug         String        @unique
  created_at   DateTime
  date         DateTime
  capacity     Int
  price        Float
  description  String
  image_url    String
  organizer    User          @relation(fields: [organizer_id], references: [id])
  organizer_id Int
  Transaction  Transaction[]
  Promotion    Promotion[]
  Review       Review[]

  @@map("events")
}

model Promotion {
  id             Int      @id @default(autoincrement())
  start_date     DateTime
  end_date       DateTime
  voucher_name   String
  voucher_amount String
  organizer      User     @relation(fields: [organizer_id], references: [id])
  organizer_id   Int
  event          Event    @relation(fields: [event_id], references: [id])
  event_id       Int

  @@map("promotions")
}

model Review {
  id          Int         @id @default(autoincrement())
  created_at  DateTime
  rating      Int
  description String?
  customer    User        @relation(fields: [customer_id], references: [id])
  customer_id Int
  event       Event       @relation(fields: [event_id], references: [id])
  event_id    Int
  trx         Transaction @relation(fields: [trx_id], references: [id])
  trx_id      Int

  @@map("reviews")
}